#!/bin/bash
if [ ${USER} != root 2>/dev/null ]
then
echo "Permission denied. Execute as root.";
echo -e "\n\`givown -h\` for help.";
fi
#
if [ ${USER} == root 2>/dev/null ]
then
	if [ -z $1 2>/dev/null ]
	then
	echo -e "Application and user required as parameter.\n";
	echo -e "Example: sudo givown <script> <username>\n";
	echo -e "\n\tThe script must be given as its name and never as its path.\n"
	echo -e "¡Always execute this command on the current directory!";
	echo -e "\nGiven scripts must be in the current directory.";
	fi
	#
	if [ -n $1 2>/dev/null ] && [ -n $2 2>/dev/null ] || [ $1 != '-h' 2>/dev/null ]
	then
	app=$1;uname=$2;
	cp -r ./"$app" /usr/bin/. 2>/dev/null;
	chown "$uname" /usr/bin/"$app" 2>/dev/null;
	chmod 700 /usr/bin/"$app" 2>/dev/null;
	fi
	if [ -z $uname 2>/dev/null ]
	then
	echo -e "\nYou must specify who is going to own this script or application...";
	echo -e "\nMissing value: <username>\n\t\`sudo givown -h\` to check help.";
	fi
	if [ $1 == '-h' 2>/dev/null ]
	then
	echo -e "Example: sudo givown <script> <username>\n";
        echo -e "\n\tThe script must be given as its name and never as its path.\n";
        echo -e "¡Always execute this command on the current directory!";
        echo -e "\nGiven scripts must be in the current directory.";
	fi
fi
