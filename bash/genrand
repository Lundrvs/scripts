#!/bin/bash
nsec=`date +%N`;sw=1;sec=`date +%S`;
while [ $sw != 0 2>/dev/null ]
do
	if [ $sec -le 15 2>/dev/null ]
	then
	val1=$((nsec+sec));
	sec=$((sec+15));
	fi
	if [ $sec -g 15 2>/dev/null ] && [ $sec -le 30 2>/dev/null ]
	then
	val1=$((nsec-val1));
	sec=$((sec+15));
	fi
	if [ $sec -g 30 2>/dev/null ] && [ $sec -le 45 2>/dev/null ]
	then
	val1=$((nsec*val1));
	sec=$((sec+15));
	fi
	if [ $sec -g 45 2>/dev/null ] && [ $sec -le 59 2>/dev/null ]
	then
	val1=$((nsec/val1));
	sec=$((sec+15));
	fi
sw=$((sw-1));
done
	if [ $1 == 1 2>/dev/null ]
	then
	val1=$((val1/100000000));
	echo $val1;
	fi
	if [ $1 == 2 2>/dev/null ]
	then
	val1=$((val1/10000000));
	echo $val1;
	fi
	if [ $val1 == 3 2>/dev/null ]
	then
	val1=$((val1/1000000));
	echo $val1;
	fi
	if [ $1 == 4 2>/dev/null ]
	then
	val1=$((val1/100000))`;
	echo $val1;
	fi
        if [ $1 == 5 2>/dev/null ]
        then
        val1=$((val1/10000));
        echo $val1;
        fi
        if [ $1 == 6 2>/dev/null ]
        then
        val1=$((val1/1000));
        echo $val1;
        fi
        if [ $1 == 7 2>/dev/null ]
        then
        val1=$((val1/100));
        echo $val1;
        fi
        if [ $1 == 8 2>/dev/null ]
        then
        val1=$$((val1/10));
        echo $val1;
        fi
        if [ $1 == 9 2>/dev/null ]
        then
        echo $val1;
        fi
if [ -z $1 2>/dev/null ]
then
echo $val1;
fi
if [ $1 == '-h' 2>/dev/null ]
then
echo -e "\nGenerates random numeric values.\n";
echo -e "Prints a 9 digit value by default.\n";
echo -e " \`genran <n>\` prints a number with 'n' digits, where 'n' is a number\n";
echo -e "that represents the digits between values of 1 and 9.\n";
fi
